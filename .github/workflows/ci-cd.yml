name: Build, Test, and Deploy

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: zeelu1/ai-service

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.DOCKER_IMAGE }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  Test:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Integration Tests
        run: echo "Running integration tests..."

  Release:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Promote Docker Image to Latest
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}:test
          docker tag ${{ env.DOCKER_IMAGE }}:test ${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ env.DOCKER_IMAGE }}:latest

  Deploy:
    runs-on: ubuntu-latest
    needs: Release
    steps:
      - name: Deploy to AKS
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 -d > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl set image deployment/ai-service ai-service=${{ env.DOCKER_IMAGE }}:latest
          kubectl rollout restart deployment/ai-service
      
      - name: Verify Deployment
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 -d > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl rollout status deployment/ai-service
          kubectl get pods -o wide 